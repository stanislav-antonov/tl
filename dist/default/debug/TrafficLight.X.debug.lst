

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Dec 02 01:12:13 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	12F509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	jmp_tab,global,class=ENTRY,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x8,8
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 29/04/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F509 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0001                     _TMR0	set	1
    57  0000                     _OPTION	set	0
    58  0006                     _TRIS	set	6
    59  0006                     _GPIObits	set	6
    60                           
    61                           	psect	cinit
    62  002                     start_initialization:	
    63                           ; #config settings
    64                           
    65  002                     __initialization:
    66  002                     end_of_initialization:	
    67                           ;End of C runtime variable initialization code
    68                           
    69  002                     __end_of__initialization:
    70  002  0064               	clrf	4
    71  003  04A3  0B8F         	ljmp	_main	;jump to C main() function
    72                           
    73                           	psect	cstackBANK0
    74  010                     __pcstackBANK0:
    75  010                     ??_standby:
    76                           
    77                           ; 1 bytes @ 0x0
    78  010                     	ds	1
    79  011                     ?_main:
    80  011                     main@argc:	
    81                           ; 2 bytes @ 0x1
    82                           
    83                           
    84                           ; 2 bytes @ 0x1
    85  011                     	ds	2
    86  013                     main@argv:
    87                           
    88                           ; 2 bytes @ 0x3
    89  013                     	ds	2
    90  015                     ??_main:
    91                           
    92                           ; 1 bytes @ 0x5
    93  015                     	ds	2
    94  017                     main@seconds_total:
    95                           
    96                           ; 2 bytes @ 0x7
    97  017                     	ds	2
    98  019                     main@p_cnt:
    99                           
   100                           ; 1 bytes @ 0x9
   101  019                     	ds	1
   102  01A                     main@seconds:
   103                           
   104                           ; 1 bytes @ 0xA
   105  01A                     	ds	1
   106                           
   107                           	psect	cstackCOMMON
   108  007                     __pcstackCOMMON:
   109  007                     ?_init:
   110  007                     ??_init:	
   111                           ; 1 bytes @ 0x0
   112                           
   113  007                     ?_debounce:	
   114                           ; 1 bytes @ 0x0
   115                           
   116  007                     ??_debounce:	
   117                           ; 1 bytes @ 0x0
   118                           
   119  007                     ?_standby:	
   120                           ; 1 bytes @ 0x0
   121                           
   122  007                     debounce@pin:	
   123                           ; 1 bytes @ 0x0
   124                           
   125                           
   126                           ; 1 bytes @ 0x0
   127  007                     	ds	1
   128                           
   129                           	psect	maintext
   130  18F                     __pmaintext:	
   131 ;;
   132 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   133 ;;
   134 ;; *************** function _main *****************
   135 ;; Defined at:
   136 ;;		line 55 in file "main.c"
   137 ;; Parameters:    Size  Location     Type
   138 ;;  argc            2    1[BANK0 ] int 
   139 ;;  argv            2    3[BANK0 ] PTR PTR unsigned char 
   140 ;; Auto vars:     Size  Location     Type
   141 ;;  p_cnt           1    9[BANK0 ] unsigned char 
   142 ;;  seconds         1   10[BANK0 ] unsigned char 
   143 ;;  seconds_tota    2    7[BANK0 ] unsigned int 
   144 ;; Return value:  Size  Location     Type
   145 ;;                  2    1[BANK0 ] int 
   146 ;; Registers used:
   147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+6, btemp+7, pclath, cstack
   148 ;; Tracked objects:
   149 ;;		On entry : B00/0
   150 ;;		On exit  : 0/0
   151 ;;		Unchanged: 0/0
   152 ;; Data sizes:     COMMON   BANK0   BANK1
   153 ;;      Params:         0       4       0
   154 ;;      Locals:         0       4       0
   155 ;;      Temps:          0       2       0
   156 ;;      Totals:         0      10       0
   157 ;;Total ram usage:       10 bytes
   158 ;; Hardware stack levels required when called:    2
   159 ;; This function calls:
   160 ;;		_debounce
   161 ;;		_init
   162 ;;		_standby
   163 ;; This function is called by:
   164 ;;		Startup code after reset
   165 ;; This function uses a non-reentrant model
   166 ;;
   167                           
   168                           
   169                           ;psect for function _main
   170  18F                     _main:
   171  18F                     l637:	
   172                           ;incstack = 0
   173                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+6+btemp+7+pclath+cstack]
   174                           
   175                           
   176                           ;main.c: 56: 
   177  18F  04A3  0909  04A3   	fcall	entry__init
   178  192                     l639:
   179                           
   180                           ;main.c: 57: 
   181  192  04A4               	bcf	4,5	;FSR5=0, select bank0
   182  193  0306               	rrf	6,w	;volatile
   183  194  0035               	movwf	??_main
   184  195  0335               	rrf	??_main,f
   185  196  0315               	rrf	??_main,w
   186  197  0E01               	andlw	1
   187  198  04A3  0907  04A3   	fcall	entry__debounce
   188  19B                     l641:
   189                           
   190                           ;main.c: 59: 
   191  19B  04A4               	bcf	4,5	;FSR5=0, select bank0
   192  19C  0077               	clrf	main@seconds_total
   193  19D  0078               	clrf	main@seconds_total+1
   194  19E                     l643:
   195                           
   196                           ;main.c: 62: 
   197  19E  007A               	clrf	main@seconds
   198  19F                     l649:
   199                           
   200                           ;main.c: 63: 
   201  19F  021A               	movf	main@seconds,w
   202  1A0  0743               	btfss	3,2
   203  1A1  0BA3               	goto	u131
   204  1A2  0BA4               	goto	u130
   205  1A3                     u131:
   206  1A3  0BA8               	goto	l653
   207  1A4                     u130:
   208  1A4                     l651:
   209                           
   210                           ;main.c: 64: 
   211  1A4  0426               	bcf	6,1	;volatile
   212  1A5  04A6               	bcf	6,5	;volatile
   213  1A6  0486               	bcf	6,4	;volatile
   214                           
   215                           ;main.c: 65: 
   216  1A7  0526               	bsf	6,1	;volatile
   217  1A8                     l653:
   218                           
   219                           ;main.c: 68: 
   220  1A8  0C05               	movlw	5
   221  1A9  019A               	xorwf	main@seconds,w
   222  1AA  0743               	btfss	3,2
   223  1AB  0BAD               	goto	u141
   224  1AC  0BAE               	goto	u140
   225  1AD                     u141:
   226  1AD  0BAF               	goto	l657
   227  1AE                     u140:
   228  1AE                     l655:
   229                           
   230                           ;main.c: 69: 
   231  1AE  05A6               	bsf	6,5	;volatile
   232  1AF                     l657:
   233                           
   234                           ;main.c: 72: 
   235  1AF  0C0A               	movlw	10
   236  1B0  019A               	xorwf	main@seconds,w
   237  1B1  0743               	btfss	3,2
   238  1B2  0BB4               	goto	u151
   239  1B3  0BB5               	goto	u150
   240  1B4                     u151:
   241  1B4  0BB8               	goto	l661
   242  1B5                     u150:
   243  1B5                     l659:
   244                           
   245                           ;main.c: 73: 
   246  1B5  0426               	bcf	6,1	;volatile
   247                           
   248                           ;main.c: 74:     OPTION = 0b00000000;
   249  1B6  04A6               	bcf	6,5	;volatile
   250  1B7  0586               	bsf	6,4	;volatile
   251  1B8                     l661:
   252  1B8  0C14               	movlw	20
   253  1B9  019A               	xorwf	main@seconds,w
   254  1BA  0743               	btfss	3,2
   255  1BB  0BBD               	goto	u161
   256  1BC  0BBE               	goto	u160
   257  1BD                     u161:
   258  1BD  0BC0               	goto	l665
   259  1BE                     u160:
   260  1BE                     l663:
   261  1BE  0486               	bcf	6,4	;volatile
   262  1BF  05A6               	bsf	6,5	;volatile
   263  1C0                     l665:
   264  1C0  0079               	clrf	main@p_cnt
   265  1C1                     l671:
   266  1C1  0C41               	movlw	65
   267  1C2  04A4               	bcf	4,5	;FSR5=0, select bank0
   268  1C3  0036               	movwf	??_main+1
   269  1C4  0CEE               	movlw	238
   270  1C5  0035               	movwf	??_main
   271  1C6                     u217:
   272  1C6  02F5               	decfsz	??_main,f
   273  1C7  0BC6               	goto	u217
   274  1C8  02F6               	decfsz	??_main+1,f
   275  1C9  0BC6               	goto	u217
   276  1CA                     l673:
   277  1CA  04A4               	bcf	4,5	;FSR5=0, select bank0
   278  1CB  0666               	btfsc	6,3	;volatile
   279  1CC  0BCE               	goto	u171
   280  1CD  0BCF               	goto	u170
   281  1CE                     u171:
   282  1CE  0BD2               	goto	l677
   283  1CF                     u170:
   284  1CF                     l675:
   285  1CF  04A3  0905  04A3   	fcall	entry__standby
   286  1D2                     l677:
   287  1D2  0C01               	movlw	1
   288  1D3  002F               	movwf	btemp+7
   289  1D4  020F               	movf	btemp+7,w
   290  1D5  04A4               	bcf	4,5	;FSR5=0, select bank0
   291  1D6  01F9               	addwf	main@p_cnt,f
   292  1D7                     l679:
   293  1D7  0C14               	movlw	20
   294  1D8  0099               	subwf	main@p_cnt,w
   295  1D9  0703               	skipc
   296  1DA  0BDC               	goto	u181
   297  1DB  0BDD               	goto	u180
   298  1DC                     u181:
   299  1DC  0BC1               	goto	l671
   300  1DD                     u180:
   301  1DD                     l681:
   302  1DD  0C01               	movlw	1
   303  1DE  002E               	movwf	btemp+6
   304  1DF  006F               	clrf	btemp+7
   305  1E0  020E               	movf	wtemp3,w
   306  1E1  01F7               	addwf	main@seconds_total,f
   307  1E2  0603               	skipnc
   308  1E3  02B8               	incf	main@seconds_total+1,f
   309  1E4  020F               	movf	wtemp3+1,w
   310  1E5  01F8               	addwf	main@seconds_total+1,f
   311  1E6  0C2C               	movlw	44
   312  1E7  0197               	xorwf	main@seconds_total,w
   313  1E8  0743               	skipz
   314  1E9  0BEE               	goto	u191
   315  1EA  00D8               	decf	main@seconds_total+1,w
   316  1EB  0743               	btfss	3,2
   317  1EC  0BEE               	goto	u191
   318  1ED  0BEF               	goto	u190
   319  1EE                     u191:
   320  1EE  0BF2               	goto	l685
   321  1EF                     u190:
   322  1EF                     l683:
   323  1EF  04A3  0905  04A3   	fcall	entry__standby
   324  1F2                     l685:
   325  1F2  0C01               	movlw	1
   326  1F3  002F               	movwf	btemp+7
   327  1F4  020F               	movf	btemp+7,w
   328  1F5  04A4               	bcf	4,5	;FSR5=0, select bank0
   329  1F6  01FA               	addwf	main@seconds,f
   330  1F7                     l687:
   331  1F7  0C19               	movlw	25
   332  1F8  009A               	subwf	main@seconds,w
   333  1F9  0703               	skipc
   334  1FA  0BFC               	goto	u201
   335  1FB  0BFD               	goto	u200
   336  1FC                     u201:
   337  1FC  0B9F               	goto	l649
   338  1FD                     u200:
   339  1FD  0B9E               	goto	l643
   340  1FE  04A3  0A00         	ljmp	start
   341  200                     __end_of_main:
   342                           
   343                           	psect	text1
   344  170                     __ptext1:	
   345 ;; *************** function _standby *****************
   346 ;; Defined at:
   347 ;;		line 148 in file "main.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1   10[None  ] void 
   354 ;; Registers used:
   355 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1
   361 ;;      Params:         0       0       0
   362 ;;      Locals:         0       0       0
   363 ;;      Temps:          0       1       0
   364 ;;      Totals:         0       1       0
   365 ;;Total ram usage:        1 bytes
   366 ;; Hardware stack levels used:    1
   367 ;; Hardware stack levels required when called:    1
   368 ;; This function calls:
   369 ;;		_debounce
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           
   376                           ;psect for function _standby
   377  170                     _standby:
   378  170                     l633:
   379                           
   380                           ;main.c: 149:     GPIObits.GP1 = 0; GPIObits.GP5 = 0; GPIObits.GP4 = 0;
   381  170  04A4               	bcf	4,5	;FSR5=0, select bank0
   382  171  0426               	bcf	6,1	;volatile
   383  172  04A6               	bcf	6,5	;volatile
   384  173  0486               	bcf	6,4	;volatile
   385  174                     l635:
   386                           
   387                           ;main.c: 150:     debounce(GPIObits.GP3);
   388  174  0306               	rrf	6,w	;volatile
   389  175  0030               	movwf	??_standby
   390  176  0330               	rrf	??_standby,f
   391  177  0310               	rrf	??_standby,w
   392  178  0E01               	andlw	1
   393  179  04A3  0907  04A3   	fcall	entry__debounce
   394  17C  0003               	sleep	;# 
   395  17D                     l47:
   396  17D  0800               	retlw	0
   397  17E                     __end_of_standby:
   398                           
   399                           	psect	jmp_tab
   400  005                     __pjmp_tab:	
   401                           ;incstack = 0
   402                           ; Regs used in _standby: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   403                           
   404  005                     entry__standby:
   405  005  04A3  0B70         	ljmp	_standby
   406  007                     entry__debounce:	
   407                           ;incstack = 0
   408                           ; Regs used in _debounce: [wreg-fsr0h+status,2+status,0]
   409                           
   410  007  04A3  0B7E         	ljmp	_debounce
   411  009                     entry__init:	
   412                           ;incstack = 0
   413                           ; Regs used in _init: [wreg]
   414                           
   415  009  04A3  0B6B         	ljmp	_init
   416                           
   417                           	psect	text2
   418  17E                     __ptext2:	
   419 ;; *************** function _debounce *****************
   420 ;; Defined at:
   421 ;;		line 136 in file "main.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;  pin             1    wreg     unsigned char 
   424 ;; Auto vars:     Size  Location     Type
   425 ;;  pin             1    0[COMMON] unsigned char 
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    4[None  ] void 
   428 ;; Registers used:
   429 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1
   435 ;;      Params:         0       0       0
   436 ;;      Locals:         1       0       0
   437 ;;      Temps:          0       0       0
   438 ;;      Totals:         1       0       0
   439 ;;Total ram usage:        1 bytes
   440 ;; Hardware stack levels used:    1
   441 ;; This function calls:
   442 ;;		Nothing
   443 ;; This function is called by:
   444 ;;		_main
   445 ;;		_standby
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           
   450                           ;psect for function _debounce
   451  17E                     _debounce:
   452                           
   453                           ;debounce@pin stored from wreg
   454  17E  0027               	movwf	debounce@pin
   455  17F                     l623:
   456                           
   457                           ;main.c: 137:     TMR0 = 0;
   458  17F  04A4               	bcf	4,5	;FSR5=0, select bank0
   459  180  0061               	clrf	1	;volatile
   460                           
   461                           ;main.c: 138:     while (TMR0 < 10 * 1000 / 256) {
   462  181  0B88               	goto	l629
   463  182                     l625:
   464                           
   465                           ;main.c: 139:         if (pin == 0) {
   466  182  0207               	movf	debounce@pin,w
   467  183  0743               	btfss	3,2
   468  184  0B86               	goto	u111
   469  185  0B87               	goto	u110
   470  186                     u111:
   471  186  0B88               	goto	l629
   472  187                     u110:
   473  187  0B7F               	goto	l623
   474  188                     l629:
   475                           
   476                           ;main.c: 138:     while (TMR0 < 10 * 1000 / 256) {
   477  188  0C27               	movlw	39
   478  189  0081               	subwf	1,w	;volatile
   479  18A  0703               	skipc
   480  18B  0B8D               	goto	u121
   481  18C  0B8E               	goto	u120
   482  18D                     u121:
   483  18D  0B82               	goto	l625
   484  18E                     u120:
   485  18E                     l44:
   486  18E  0800               	retlw	0
   487  18F                     __end_of_debounce:
   488                           
   489                           	psect	text3
   490  16B                     __ptext3:	
   491 ;; *************** function _init *****************
   492 ;; Defined at:
   493 ;;		line 106 in file "main.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    2[None  ] void 
   500 ;; Registers used:
   501 ;;		wreg
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1
   507 ;;      Params:         0       0       0
   508 ;;      Locals:         0       0       0
   509 ;;      Temps:          0       0       0
   510 ;;      Totals:         0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels used:    1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           
   521                           ;psect for function _init
   522  16B                     _init:
   523  16B                     l631:
   524  16B  0C08               	movlw	8
   525  16C  0006               	tris	6
   526  16D  0C00               	movlw	0
   527  16E  0002               	option
   528  16F                     l37:
   529  16F  0800               	retlw	0
   530  170                     __end_of_init:
   531  0008                     btemp	set	8	;btemp
   532  0008                     wtemp0	set	8
   533  000A                     wtemp1	set	10
   534  000C                     wtemp2	set	12
   535  000E                     wtemp3	set	14
   536  0008                     ttemp0	set	8
   537  000B                     ttemp1	set	11
   538  0008                     ltemp0	set	8
   539  000C                     ltemp1	set	12
   540  000A                     ltemp3	set	10
   541                           
   542                           	psect	config
   543                           
   544                           ;Config register CONFIG @ 0xFFF
   545                           ;	Oscillator Selection bits
   546                           ;	OSC = IntRC, internal RC oscillator
   547                           ;	Watchdog Timer Enable bit
   548                           ;	WDT = OFF, WDT disabled
   549                           ;	Code Protection bit
   550                           ;	CP = OFF, Code protection off
   551                           ;	GP3/MCLR Pin Function Select bit
   552                           ;	MCLRE = OFF, GP3/MCLR pin function is digital input, MCLR internally tied to VDD
   553  0FFF                     	org	4095
   554  0FFF  0FEA               	dw	4074

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            1      1       1
    BANK0            16     11      11
    BANK1            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_debounce
    _standby->_debounce

Critical Paths under _main in BANK0

    _main->_standby

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10     6      4     247
                                              1 BANK0     10     6      4
                           _debounce
                               _init
                            _standby
 ---------------------------------------------------------------------------------
 (1) _standby                                              1     1      0      22
                                              0 BANK0      1     1      0
                           _debounce
 ---------------------------------------------------------------------------------
 (2) _debounce                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _debounce
   _init
   _standby
     _debounce

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            1      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               1      1       1       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            10      0       0       3        0.0%
BANK0               10      B       B       4       68.8%
BITBANK1            10      0       0       5        0.0%
BANK1               10      0       0       6        0.0%
ABS                  0      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Dec 02 01:12:13 2020

                     l44 018E                       l37 016F                       l47 017D  
                     fsr 0004                      l631 016B                      l623 017F  
                    l625 0182                      l633 0170                      l641 019B  
                    l635 0174                      l651 01A4                      l643 019E  
                    l629 0188                      l661 01B8                      l653 01A8  
                    l637 018F                      l671 01C1                      l663 01BE  
                    l655 01AE                      l639 0192                      l681 01DD  
                    l673 01CA                      l665 01C0                      l657 01AF  
                    l649 019F                      l683 01EF                      l675 01CF  
                    l659 01B5                      l685 01F2                      l677 01D2  
                    l687 01F7                      l679 01D7                      u110 0187  
                    u111 0186                      u120 018E                      u200 01FD  
                    u121 018D                      u201 01FC                      u130 01A4  
                    u131 01A3                      u140 01AE                      u141 01AD  
                    u150 01B5                      u151 01B4                      u160 01BE  
                    u217 01C6                      u161 01BD                      u170 01CF  
                    u171 01CE                      u180 01DD                      u181 01DC  
                    u190 01EF                      u191 01EE                     _TMR0 0001  
                   _TRIS 0006              main@seconds 001A                     _main 018F  
                   _init 016B                     btemp 0008                     start 0000  
                  ?_main 0011                    ?_init 0007                    ltemp0 0008  
                  ltemp1 000C                    ltemp3 000A          __end_of_standby 017E  
                  ttemp0 0008                    ttemp1 000B                    status 0003  
                  wtemp0 0008                    wtemp1 000A                    wtemp2 000C  
                  wtemp3 000E          __initialization 0002             __end_of_main 0200  
           __end_of_init 0170                   ??_main 0015                   ??_init 0007  
                 _OPTION 0000         __end_of_debounce 018F                ??_standby 0010  
__end_of__initialization 0002           __pcstackCOMMON 0007        main@seconds_total 0017  
             __pmaintext 018F                ?_debounce 0007                  __ptext1 0170  
                __ptext2 017E                  __ptext3 016B               ??_debounce 0007  
                _standby 0170     end_of_initialization 0002      start_initialization 0002  
             entry__init 0009                ___latbits 0001            __pcstackBANK0 0010  
      __size_of_debounce 0011           entry__debounce 0007                __pjmp_tab 0005  
               ?_standby 0007                 _GPIObits 0006                main@p_cnt 0019  
               _debounce 017E         __size_of_standby 000E            entry__standby 0005  
          __size_of_main 0071            __size_of_init 0005              debounce@pin 0007  
               main@argc 0011                 main@argv 0013  
